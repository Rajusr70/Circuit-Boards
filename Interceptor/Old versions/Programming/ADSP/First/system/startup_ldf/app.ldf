/*
** ADSP-21477 linker description file generated on Nov 11, 2013 at 17:06:53.
*/
/*
** Copyright (C) 2000-2013 Analog Devices Inc., All Rights Reserved.
**
** This file is generated automatically based upon the options selected
** in the System Configuration utility. Changes to the LDF configuration
** should be made by modifying the appropriate options rather than editing
** this file. To access the System Configuration utility, double-click the
** system.svc file from a navigation view.
**
** Custom additions can be inserted within the user-modifiable sections,
** these are bounded by comments that start with "$VDSG". Only changes
** placed within these sections are preserved when this file is re-generated.
**
** Product      : CrossCore Embedded Studio 1.0.2.0
** Tool Version : 6.0.2.32
*/

ARCHITECTURE(ADSP-21477)

/*
** Define a linked library list.
*/
$LIBRARIES = 

/*$VDSG<insert-user-libraries-at-beginning>                     */
/* Text inserted between these $VDSG comments will be preserved */
/*$VDSG<insert-user-libraries-at-beginning>                     */

    libcc.dlb
   ,libc.dlb
   ,libio.dlb
   ,libcpp.dlb
   ,libosal_noos.dlb
   ,libprofile.dlb
   ,libssl.dlb
   ,libdsp.dlb
   ,libdyn.dlb

/*$VDSG<insert-user-libraries-at-end>                           */
/* Text inserted between these $VDSG comments will be preserved */
/*$VDSG<insert-user-libraries-at-end>                           */

   ;

/*
** Define a linked objects list.
*/
$OBJECTS = 

/*$VDSG<insert-user-objects-at-beginning>                       */
/* Text inserted between these $VDSG comments will be preserved */
/*$VDSG<insert-user-objects-at-beginning>                       */

    "app_startup.doj"
   ,$COMMAND_LINE_OBJECTS

/*$VDSG<insert-user-objects-at-end>                             */
/* Text inserted between these $VDSG comments will be preserved */
/*$VDSG<insert-user-objects-at-end>                             */

   ;

/*
** List of all objects and libraries.
*/
$OBJS_LIBS = $OBJECTS, $LIBRARIES;

/*$VDSG<customize-async-macros>                                 */
/* This code is preserved if the LDF is re-generated.           */

#define ASYNC_MEMTYPE DM RAM

/*$VDSG<customize-async-macros>                                 */

/*$VDSG<insert-user-macros>                                     */
/* Text inserted between these $VDSG comments will be preserved */
/*$VDSG<insert-user-macros>                                     */


MEMORY
{
   /*
   ** ADSP-21477 MEMORY MAP.
   **
   ** The SHARC 21477 has 2Mbit internal RAM.
   ** -------------------- BLOCK 0 (0.75 MBits) --------------------------------
   ** 0x0008 C000 to 0x0008 FFFF  Normal word (48) Space
   ** 0x0009 2000 to 0x0009 7FFF  Normal word (32) Space
   ** 0x0012 4000 to 0x0012 FFFF  Short word  (16) Space
   **
   ** Notes:
   ** 1) The interrupt Vector Table (IVT) code is placed in internal memory
   **    by default and has to use ISA (NW, 48 bit) instructions.
   ** 2) The loader kernel uses 256 ISA instructions from the start of the 
   **    IVT. The final action it does is to load the application code to these
   **    address overwriting it's own code. The application code in these
   **    addresses therefore must also be ISA instructions. Do not put 
   **    VISA (SW) instructions in these 256 locations.
   */
   mem_iv_code             { TYPE(PM RAM) START(0x0008C000) END(0x0008C0A7) WIDTH(48) }
   mem_block0_nwco         { TYPE(PM RAM) START(0x0008C0A8) END(0x0008C0FF) WIDTH(48) }
   mem_block0_sw16         { TYPE(SW RAM) START(0x00124300) END(0x0012FFFF) WIDTH(16) }

   /*
   ** -------------------- BLOCK 1 (0.75 MBits) --------------------------------
   ** 0x000A C000 to 0x000A FFFF  Normal word (48) Space
   ** 0x000B 2000 to 0x000B 7FFF  Normal word (32) Space
   ** 0x0016 4000 to 0x0016 FFFF  Short word (16)  Space
   */
   mem_block1_dm32         { TYPE(DM RAM) START(0x000B2000) END(0x000B7FFF) WIDTH(32) }

   /*
   ** -------------------- BLOCK 2 (0.25 MBits) --------------------------------
   ** 0x000C 0000 to 0x000C 1554  Normal word (48) Space
   ** 0x000C 0000 to 0x000C 1FFF  Normal word (32) Space
   ** 0x0018 0000 to 0x0018 3FFF  Short word (16) Space
   */
   mem_block2_pm32         { TYPE(PM RAM) START(0x000C0000) END(0x000C1FFF) WIDTH(32) }

   /*
   ** -------------------- BLOCK 3 (0.25 MBits) --------------------------------
   ** 0x000E 0000 to 0x000E 1554  Normal word (48) Space
   ** 0x000E 0000 to 0x000E 1FFF  Normal word (32) Space
   ** 0x001C 0000 to 0x001C 3FFF  Short word (16)  Space
   */
   mem_block3_dm32         { TYPE(DM RAM) START(0x000E0000) END(0x000E1FFF) WIDTH(32) }

   /*
   ** -------------------- External memory -------------------------------------
   ** The ADSP-21477 does not have an external port interface.
   */
   
   /*$VDSG<insert-new-memory-segments>                          */
   /* Text inserted between these $VDSG comments will be preserved */
   /*$VDSG<insert-new-memory-segments>                          */
   
} /* MEMORY */

PROCESSOR p0
{
   OUTPUT($COMMAND_LINE_OUTPUT_FILE)
   KEEP(_main)
   KEEP(___ctor_NULL_marker)
   
   /*$VDSG<insert-user-ldf-commands>                            */
   /* Text inserted between these $VDSG comments will be preserved */
   /*$VDSG<insert-user-ldf-commands>                            */
   
   SECTIONS
   {
      
      /*$VDSG<insert-new-sections-at-iv_code>                   */
      /* Text inserted between these $VDSG comments will be preserved */
      /*$VDSG<insert-new-sections-at-iv_code>                   */
      
      #define IV_CODE dxe_iv_code
      IV_CODE PM
      {
         
         /*$VDSG<insert-new-sections-at-the-start-of-iv_code>   */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-new-sections-at-the-start-of-iv_code>   */
         
         INPUT_SECTIONS( $OBJECTS(iv_code) )
         
         /*$VDSG<insert-new-sections-at-the-end-of-iv_code>     */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-new-sections-at-the-end-of-iv_code>     */
         
      } > mem_iv_code
      
      dxe_block0_nw_code0 PM
      {
         
         /*$VDSG<insert-new-sections-at-the-start-of-dxe_block0_nw_code0>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-new-sections-at-the-start-of-dxe_block0_nw_code0>  */
         
         INPUT_SECTIONS( $OBJS_LIBS(seg_int_code seg_init seg_pmco) )
         
         /*$VDSG<insert-new-sections-at-the-end-of-dxe_block0_nw_code0>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-new-sections-at-the-end-of-dxe_block0_nw_code0>  */
         
      } > mem_block0_nwco
      
      
      /*$VDSG<insert-new-sections-at-mem_block0_sw16>           */
      /* Text inserted between these $VDSG comments will be preserved */
      /*$VDSG<insert-new-sections-at-mem_block0_sw16>           */
      
      #define BLOCK0_SW_CODE dxe_block0_sw_code
      BLOCK0_SW_CODE SW
      {
         
         /*$VDSG<insert-new-sections-at-the-start-of-dxe_block0_sw_code>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-new-sections-at-the-start-of-dxe_block0_sw_code>  */
         
         FILL(0x1) /* fill in gaps in the memory with NOPs */
         INPUT_SECTIONS( $OBJS_LIBS(seg_int_code_sw seg_int_code seg_swco seg_pmco) )
         
         /*$VDSG<insert-new-sections-at-the-end-of-dxe_block0_sw_code>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-new-sections-at-the-end-of-dxe_block0_sw_code>  */
         
      } > mem_block0_sw16
      
      #define BLOCK0_NW_CODE dxe_block0_nw_code
      BLOCK0_NW_CODE PM
      {
         
         /*$VDSG<insert-new-sections-at-the-start-of-dxe_block0_nw_code>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-new-sections-at-the-start-of-dxe_block0_nw_code>  */
         
         INPUT_SECTIONS( $OBJS_LIBS(seg_int_code seg_pmco) )
         INPUT_SECTIONS( $OBJS_LIBS(seg_init) )
         
         /*$VDSG<insert-new-sections-at-the-end-of-dxe_block0_nw_code>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-new-sections-at-the-end-of-dxe_block0_nw_code>  */
         
      } > mem_block0_sw16
      
      
      /*$VDSG<insert-new-sections-at-mem_block2_pm32>           */
      /* Text inserted between these $VDSG comments will be preserved */
      /*$VDSG<insert-new-sections-at-mem_block2_pm32>           */
      
      dxe_block2_pm_data
      {
         
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block2_pm_data>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block2_pm_data>  */
         
         INPUT_SECTIONS( $OBJS_LIBS(seg_pmda) )
         
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block2_pm_data>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block2_pm_data>  */
         
      } > mem_block2_pm32
      
      
      /*$VDSG<insert-new-sections-at-mem_block1_dm32>           */
      /* Text inserted between these $VDSG comments will be preserved */
      /*$VDSG<insert-new-sections-at-mem_block1_dm32>           */
      
      dxe_block1_exe_name
      {
         
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block1_exe_name>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block1_exe_name>  */
         
         EXECUTABLE_NAME(__executable_name)
         
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block1_exe_name>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block1_exe_name>  */
         
      } > mem_block1_dm32
      
      dxe_block1_cpp_ctors
      {
         FORCE_CONTIGUITY
         __ctors = .; /* __ctors points to the start of the section */
         
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block1_cpp_ctors>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block1_cpp_ctors>  */
         
         INPUT_SECTIONS( $OBJS_LIBS(seg_ctdm) )
         INPUT_SECTIONS( $OBJS_LIBS(seg_ctdml) )
         
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block1_cpp_ctors>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block1_cpp_ctors>  */
         
      } > mem_block1_dm32
      
      dxe_block1_dm_data
      {
         
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block1_dm_data>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block1_dm_data>  */
         
         RESERVE(heaps_and_system_stack_in_Internal, heaps_and_system_stack_in_Internal_length = 2048, 2)
         INPUT_SECTIONS( $OBJS_LIBS(seg_int_data seg_dmda seg_vtbl .rtti .cht .edt) )
         
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block1_dm_data>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block1_dm_data>  */
         
      } > mem_block1_dm32
      
      dxe_block1_bsz ZERO_INIT
      {
         
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block1_bsz>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block1_bsz>  */
         
         INPUT_SECTIONS( $OBJS_LIBS(.bss) )
         
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block1_bsz>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block1_bsz>  */
         
      } > mem_block1_dm32
      
      
      /*$VDSG<insert-new-sections-at-mem_block3_dm32>           */
      /* Text inserted between these $VDSG comments will be preserved */
      /*$VDSG<insert-new-sections-at-mem_block3_dm32>           */
      
      dxe_block3_cpp_eh_gdt
      {
         FORCE_CONTIGUITY
         /* C++ exceptions data table */
         
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block3_cpp_eh_gdt>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block3_cpp_eh_gdt>  */
         
         INPUT_SECTIONS( $OBJS_LIBS(.gdt) )
         INPUT_SECTIONS( $OBJS_LIBS(.gdtl) )
         
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block3_cpp_eh_gdt>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block3_cpp_eh_gdt>  */
         
      } > mem_block3_dm32
      
      dxe_block3_dm_data
      {
         
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block3_dm_data>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block3_dm_data>  */
         
         RESERVE(heaps_and_system_heap_in_Internal, heaps_and_system_heap_in_Internal_length = 2048, 2)
         INPUT_SECTIONS( $OBJS_LIBS(seg_int_data seg_dmda seg_vtbl .rtti .cht .edt) )
         
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block3_dm_data>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block3_dm_data>  */
         
      } > mem_block3_dm32
      
      dxe_block3_bsz ZERO_INIT
      {
         
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block3_bsz>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block3_bsz>  */
         
         INPUT_SECTIONS( $OBJS_LIBS(.bss) )
         
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block3_bsz>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block3_bsz>  */
         
      } > mem_block3_dm32
      
      dxe_block3_overflow_data
      {
         
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block3_overflow_data>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block3_overflow_data>  */
         
         /* Use any unused memory in the dm data designated blocks 1 and 3
         ** for pm data if we've not been able to map it to block 2.
         */
         INPUT_SECTIONS( $OBJS_LIBS(seg_pmda) )
         
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block3_overflow_data>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block3_overflow_data>  */
         
      } > mem_block3_dm32
      
      dxe_block3_heap NO_INIT
      {
         
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block3_heap>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block3_heap>  */
         
         RESERVE_EXPAND(heaps_and_system_heap_in_Internal, heaps_and_system_heap_in_Internal_length, 0, 2)
         ldf_heap_space = heaps_and_system_heap_in_Internal;
         ldf_heap_end = (ldf_heap_space + (heaps_and_system_heap_in_Internal_length - 2)) & 0xfffffffe;
         ldf_heap_length = ldf_heap_end - ldf_heap_space;
      } > mem_block3_dm32
      
      dxe_block1_overflow_data
      {
         
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block1_overflow_data>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block1_overflow_data>  */
         
         /* Use any unused memory in the dm data designated blocks 1 and 3
         ** for pm data if we've not been able to map it to block 2.
         */
         INPUT_SECTIONS( $OBJS_LIBS(seg_pmda) )
         
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block1_overflow_data>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block1_overflow_data>  */
         
      } > mem_block1_dm32
      
      dxe_block1_stack NO_INIT
      {
         
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block1_stack>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block1_stack>  */
         
         RESERVE_EXPAND(heaps_and_system_stack_in_Internal, heaps_and_system_stack_in_Internal_length, 0, 2)
         ldf_stack_space = heaps_and_system_stack_in_Internal;
         ldf_stack_end = (ldf_stack_space + (heaps_and_system_stack_in_Internal_length - 2)) & 0xfffffffe;
         ldf_stack_length = ldf_stack_end - ldf_stack_space;
      } > mem_block1_dm32
      
      
      /*$VDSG<insert-new-sections-at-mem_block2_overflow>       */
      /* Text inserted between these $VDSG comments will be preserved */
      /*$VDSG<insert-new-sections-at-mem_block2_overflow>       */
      
      dxe_block2_overflow_data
      {
         
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block2_overflow_data>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block2_overflow_data>  */
         
         /* Use any unused memory in the dm data designated blocks 1 and 3
         ** for pm data if we've not been able to map it to block 2.
         */
         INPUT_SECTIONS( $OBJS_LIBS(seg_int_data seg_dmda seg_vtbl .rtti .cht .edt) )
         
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block2_overflow_data>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block2_overflow_data>  */
         
      } > mem_block2_pm32
      
      dxe_block2_bsz ZERO_INIT
      {
         
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block2_bsz>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-start-of-dxe_block2_bsz>  */
         
         INPUT_SECTIONS( $OBJS_LIBS(.bss) )
         
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block2_bsz>  */
         /* Text inserted between these $VDSG comments will be preserved */
         /*$VDSG<insert-input-sections-at-the-end-of-dxe_block2_bsz>  */
         
      } > mem_block2_pm32
      
      
      /*$VDSG<insert-new-sections-at-the-end>                   */
      /* Text inserted between these $VDSG comments will be preserved */
      /*$VDSG<insert-new-sections-at-the-end>                   */
      
   } /* SECTIONS */
} /* p0 */

